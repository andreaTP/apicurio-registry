# Testing Basic Auth

quarkus.http.auth.basic=true
quarkus.security.users.embedded.enabled=true
quarkus.security.users.embedded.plain-text=true
#Enable Authorization
registry.auth.role-based-authorization=true
# Alice: "Authorization: Basic YWxpY2U6YWxpY2U="
quarkus.security.users.embedded.users.alice=alice
# Bob: "Authorization: Basic Ym9iOmJvYg=="
# example:
# curl -H "Authorization: Basic $(echo -n "alice:alice" | base64)" http://localhost:8080/apis/registry/v2/admin/rules -v
quarkus.security.users.embedded.users.bob=bob
quarkus.security.users.embedded.roles.alice=sr-admin
quarkus.security.users.embedded.roles.bob=user

quarkus.http.auth.form.login-page=login.html
# do not redirect, respond with HTTP 200 OK
quarkus.http.auth.form.landing-page=
# do not redirect, respond with HTTP 401 Unauthorized
quarkus.http.auth.form.error-page=
# HttpOnly must be false if you want to log out on the client; it can be true if logging out from the server
quarkus.http.auth.form.http-only-cookie=false
registry.auth.enabled=true
# TODO find a better name for this ...
registry.basic.auth.enabled=true
quarkus.oidc.enabled=false
quarkus.oidc.tenant-enabled=false
# Need to set this to be able to instantiate the non-used OIDC provider
quarkus.oidc.token-path=non-existent
app.authn.enabled=true
apicurio.authn.basic-client-credentials.enabled=true
